{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/NoQuotesFound.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","pages/AllQuote.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","pages/NotFound.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","classes","header","logo","nav","to","activeClassName","active","Layout","props","main","children","NoQuotesFound","noquotes","QuoteItem","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","LoadingSpinner","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuote","loadedQuotes","useEffect","length","Card","card","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NotFound","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","enteredComment","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addCommentHandler","HighlightedQuote","QuoteDetail","params","match","useRouteMatch","path","exact","url","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a15951ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2rQng\",\"logo\":\"MainNavigation_logo__1OLM4\",\"nav\":\"MainNavigation_nav__36uMc\",\"active\":\"MainNavigation_active__3eZTW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__nhhtt\",\"loading\":\"QuoteForm_loading__uYXHc\",\"control\":\"QuoteForm_control__2AlxA\",\"actions\":\"QuoteForm_actions__RrBWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3Rmc4\",\"loading\":\"NewCommentForm_loading__I39hh\",\"control\":\"NewCommentForm_control__1_9WQ\",\"actions\":\"NewCommentForm_actions__12jJx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2o11E\",\"sorting\":\"QuoteList_sorting__362XV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1h8Ys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3-Xv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2Ebkl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__30Hbo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1tUDr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2R-XI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1iAoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__2S7-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__39Dh4\"};","import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./MainNavigation.module.css\";\r\n\r\nconst MainNavigation = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>Great Quotes</div>\r\n            <nav className={classes.nav}>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to='/quotes' activeClassName={classes.active}>\r\n                            All Quotes\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink\r\n                            to='/new-quote'\r\n                            activeClassName={classes.active}\r\n                        >\r\n                            Add a Quote\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { Fragment } from \"react/cjs/react.production.min\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport classes from \"./Layout.module.css\";\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <MainNavigation />\r\n            <main className={classes.main}>{props.children}</main>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n    return (\n        <div className={classes.noquotes}>\n            <p>No quotes found!</p>\n            <Link to='/new-quote' className='btn'>\n                Add a Quote\n            </Link>\n        </div>\n    );\n};\n\nexport default NoQuotesFound;\n","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className='btn'>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n        if (ascending) {\n            return quoteA.id > quoteB.id ? 1 : -1;\n        } else {\n            return quoteA.id < quoteB.id ? 1 : -1;\n        }\n    });\n};\n\nconst QuoteList = (props) => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const queryParams = new URLSearchParams(location.search);\n\n    const isAscending = queryParams.get(\"sort\") === \"asc\";\n\n    const sortedQuotes = sortQuotes(props.quotes, isAscending);\n\n    const sortQuotesHandler = () => {\n        history.push({\n            pathname: location.pathname,\n            search: `?sort=${isAscending ? \"desc\" : \"asc\"}`,\n        });\n    };\n    return (\n        <Fragment>\n            <div className={classes.sorting}>\n                <button onClick={sortQuotesHandler}>\n                    Sort {isAscending ? \"Descending\" : \"Ascending\"}\n                </button>\n            </div>\n            <ul className={classes.list}>\n                {sortedQuotes.map((quote) => (\n                    <QuoteItem\n                        key={quote.id}\n                        id={quote.id}\n                        author={quote.author}\n                        text={quote.text}\n                    />\n                ))}\n            </ul>\n        </Fragment>\n    );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = \"https://react-http-8325a-default-rtdb.firebaseio.com\";\n\nexport async function getAllQuotes() {\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data.message || \"Could not fetch quotes.\");\n    }\n\n    const transformedQuotes = [];\n\n    for (const key in data) {\n        const quoteObj = {\n            id: key,\n            ...data[key],\n        };\n\n        transformedQuotes.push(quoteObj);\n    }\n\n    return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data.message || \"Could not fetch quote.\");\n    }\n\n    const loadedQuote = {\n        id: quoteId,\n        ...data,\n    };\n\n    return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n        method: \"POST\",\n        body: JSON.stringify(quoteData),\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    });\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data.message || \"Could not create quote.\");\n    }\n\n    return null;\n}\n\nexport async function addComment(requestData) {\n    const response = await fetch(\n        `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n        {\n            method: \"POST\",\n            body: JSON.stringify(requestData.commentData),\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        }\n    );\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data.message || \"Could not add comment.\");\n    }\n\n    return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n    const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data.message || \"Could not get comments.\");\n    }\n\n    const transformedComments = [];\n\n    for (const key in data) {\n        const commentObj = {\n            id: key,\n            ...data[key],\n        };\n\n        transformedComments.push(commentObj);\n    }\n\n    return transformedComments;\n}\n","import { useEffect } from \"react\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\nconst AllQuote = () => {\r\n    const {\r\n        sendRequest,\r\n        status,\r\n        data: loadedQuotes,\r\n        error,\r\n    } = useHttp(getAllQuotes, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if (status === \"pending\") {\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <p className='centered focused'>{error}</p>;\r\n    }\r\n\r\n    if (\r\n        status === \"completed\" &&\r\n        (!loadedQuotes || loadedQuotes.length === 0)\r\n    ) {\r\n        return <NoQuotesFound />;\r\n    }\r\n    return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuote;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState, Fragment } from \"react\";\nimport { Prompt } from \"react-router\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n    const [isEntering, setIsEntering] = useState(false);\n    const authorInputRef = useRef();\n    const textInputRef = useRef();\n\n    function submitFormHandler(event) {\n        event.preventDefault();\n\n        const enteredAuthor = authorInputRef.current.value;\n        const enteredText = textInputRef.current.value;\n\n        // optional: Could validate here\n\n        props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    }\n\n    const finishEntering = () => {\n        setIsEntering(false);\n    };\n\n    const formFocusHandler = () => {\n        setIsEntering(true);\n    };\n\n    return (\n        <Fragment>\n            <Prompt\n                when={isEntering}\n                message={(location) =>\n                    \"Are you sure want to leave? All Your work will be lost!\"\n                }\n            />\n            <Card>\n                <form\n                    onFocus={formFocusHandler}\n                    className={classes.form}\n                    onSubmit={submitFormHandler}\n                >\n                    {props.isLoading && (\n                        <div className={classes.loading}>\n                            <LoadingSpinner />\n                        </div>\n                    )}\n\n                    <div className={classes.control}>\n                        <label htmlFor='author'>Author</label>\n                        <input type='text' id='author' ref={authorInputRef} />\n                    </div>\n                    <div className={classes.control}>\n                        <label htmlFor='text'>Text</label>\n                        <textarea\n                            id='text'\n                            rows='5'\n                            ref={textInputRef}\n                        ></textarea>\n                    </div>\n                    <div className={classes.actions}>\n                        <button onClick={finishEntering} className='btn'>\n                            Add Quote\n                        </button>\n                    </div>\n                </form>\n            </Card>\n        </Fragment>\n    );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nconst NewQuote = () => {\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (status === \"completed\") {\r\n            history.push(\"/quotes\");\r\n        }\r\n    }, [status, history]);\r\n\r\n    const addQuoteHandler = (quoteData) => {\r\n        sendRequest(quoteData);\r\n    };\r\n    return (\r\n        <QuoteForm\r\n            isLoading={status === \"pending\"}\r\n            onAddQuote={addQuoteHandler}\r\n        />\r\n    );\r\n};\r\n\r\nexport default NewQuote;\r\n","const NotFound = () => {\r\n    return (\r\n        <div className='centered'>\r\n            <p>Page not Found!</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import { useEffect, useRef } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n    const { sendRequest, status, error } = useHttp(addComment);\n    const commentTextRef = useRef();\n    const { onAddedComment } = props;\n\n    useEffect(() => {\n        if (status === \"completed\" && !error) {\n            onAddedComment();\n        }\n    }, [onAddedComment, status, error]);\n\n    const submitFormHandler = (event) => {\n        event.preventDefault();\n\n        // optional: Could validate here\n        const enteredComment = commentTextRef.current.value;\n\n        sendRequest({\n            commentData: { text: enteredComment },\n            quoteId: props.quoteId,\n        });\n    };\n\n    return (\n        <form className={classes.form} onSubmit={submitFormHandler}>\n            {status === \"pending\" && (\n                <div className='centered'>\n                    <LoadingSpinner />\n                </div>\n            )}\n            <div className={classes.control} onSubmit={submitFormHandler}>\n                <label htmlFor='comment'>Your Comment</label>\n                <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n            </div>\n            <div className={classes.actions}>\n                <button className='btn'>Add Comment</button>\n            </div>\n        </form>\n    );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport useHttp from \"../../hooks/use-http\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n    const [isAddingComment, setIsAddingComment] = useState(false);\n    const params = useParams();\n\n    const { quoteId } = params;\n    const {\n        sendRequest,\n        status,\n        data: loadedComments,\n    } = useHttp(getAllComments);\n\n    useEffect(() => {\n        sendRequest(quoteId);\n    }, [sendRequest, quoteId]);\n\n    const startAddCommentHandler = () => {\n        setIsAddingComment(true);\n    };\n\n    const addCommentHandler = useCallback(() => {\n        sendRequest(quoteId);\n    }, [sendRequest, quoteId]);\n\n    let comments;\n\n    if (status === \"pending\") {\n        comments = (\n            <div className='centered'>\n                <LoadingSpinner />\n            </div>\n        );\n    }\n\n    if (\n        status === \"completed\" &&\n        (loadedComments || loadedComments.length > 0)\n    ) {\n        comments = <CommentsList comments={loadedComments} />;\n    }\n\n    if (\n        status === \"completed\" &&\n        (!loadedComments || loadedComments.length === 0)\n    ) {\n        <p className='centered'>No Comments were added yet</p>;\n    }\n    return (\n        <section className={classes.comments}>\n            <h2>User Comments</h2>\n            {!isAddingComment && (\n                <button className='btn' onClick={startAddCommentHandler}>\n                    Add a Comment\n                </button>\n            )}\n            {isAddingComment && (\n                <NewCommentForm\n                    quoteId={quoteId}\n                    onAddedComment={addCommentHandler}\n                />\n            )}\n            {comments}\n        </section>\n    );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\r\nimport { useParams, Route, useRouteMatch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\nconst QuoteDetail = () => {\r\n    const params = useParams();\r\n    const match = useRouteMatch();\r\n\r\n    const { quoteId } = params;\r\n\r\n    const {\r\n        sendRequest,\r\n        status,\r\n        data: loadedQuote,\r\n        error,\r\n    } = useHttp(getSingleQuote, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n\r\n    if (status === \"pending\") {\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <p className='centered'>{error}</p>;\r\n    }\r\n\r\n    if (!loadedQuote.text) {\r\n        return <p>No quote found!</p>;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote\r\n                author={loadedQuote.author}\r\n                text={loadedQuote.text}\r\n            />\r\n            <Route path={`/quotes/${params.quoteId}`} exact>\r\n                <div className='centered'>\r\n                    <Link className='btn--flat' to={`${match.url}/comments`}>\r\n                        Load Comments\r\n                    </Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments />\r\n            </Route>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport AllQuote from \"./pages/AllQuote\";\nimport NewQuote from \"./pages/NewQuote\";\nimport NotFound from \"./pages/NotFound\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\n\nfunction App() {\n    return (\n        <Layout>\n            <Switch>\n                <Route path='/' exact>\n                    <Redirect to='/quotes' />\n                </Route>\n                <Route path='/quotes' exact>\n                    <AllQuote />\n                </Route>\n                <Route path='/quotes/:quoteId'>\n                    <QuoteDetail />\n                </Route>\n                <Route path='/new-quote'>\n                    <NewQuote />\n                </Route>\n                <Route path='*'>\n                    <NotFound />\n                </Route>\n            </Switch>\n        </Layout>\n    );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}